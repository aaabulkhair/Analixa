<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://aaabulkhair.github.io/Analixa/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aaabulkhair.github.io/Analixa/" rel="alternate" type="text/html" /><updated>2022-02-07T15:23:57-06:00</updated><id>https://aaabulkhair.github.io/Analixa/feed.xml</id><title type="html">Analixa</title><subtitle>Data Science School</subtitle><entry><title type="html">Text Preprocessing | NLP 1</title><link href="https://aaabulkhair.github.io/Analixa/machine%20learning/nlp/nltk/2022/02/07/nlp-text-preprocessing-1.html" rel="alternate" type="text/html" title="Text Preprocessing | NLP 1" /><published>2022-02-07T00:00:00-06:00</published><updated>2022-02-07T00:00:00-06:00</updated><id>https://aaabulkhair.github.io/Analixa/machine%20learning/nlp/nltk/2022/02/07/nlp-text-preprocessing-1</id><author><name>Ahmed Abulkhair</name></author><category term="Machine Learning" /><category term="NLP" /><category term="NLTK" /><summary type="html"><![CDATA[In this tutorial, I tried to demonstrate the basic concepts of `preprocessing` for natural text starting from `stopwords removal`, `lowering`, and `lemmetization`.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aaabulkhair.github.io/Analixa/images/nlp1.png" /><media:content medium="image" url="https://aaabulkhair.github.io/Analixa/images/nlp1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Titanic | The Power of Sklearn</title><link href="https://aaabulkhair.github.io/Analixa/machine%20learning/sklearn/python/2022/02/05/titanic-power-of-scikit-learn.html" rel="alternate" type="text/html" title="Titanic | The Power of Sklearn" /><published>2022-02-05T00:00:00-06:00</published><updated>2022-02-05T00:00:00-06:00</updated><id>https://aaabulkhair.github.io/Analixa/machine%20learning/sklearn/python/2022/02/05/titanic-power-of-scikit-learn</id><author><name>Ahmed Abulkhair</name></author><category term="Machine Learning" /><category term="Sklearn" /><category term="Python" /><summary type="html"><![CDATA[Sklearn is the most powerful package in all ML libraries but, do you really use it to the fullest?! In this notebook, we will try to investigate deep concepts such as ColumnTransformers, Piplines, and much more.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aaabulkhair.github.io/Analixa/images/titanic.png" /><media:content medium="image" url="https://aaabulkhair.github.io/Analixa/images/titanic.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Choosing Best n_estimators for RandomForest model without retraining</title><link href="https://aaabulkhair.github.io/Analixa/machine%20learning/randomforest/classification/python/2022/02/05/best-n-estimators-for-randomforest.html" rel="alternate" type="text/html" title="Choosing Best n_estimators for RandomForest model without retraining" /><published>2022-02-05T00:00:00-06:00</published><updated>2022-02-05T00:00:00-06:00</updated><id>https://aaabulkhair.github.io/Analixa/machine%20learning/randomforest/classification/python/2022/02/05/best-n-estimators-for-randomforest</id><author><name>Ahmed Abulkhair</name></author><category term="Machine Learning" /><category term="RandomForest" /><category term="Classification" /><category term="Python" /><summary type="html"><![CDATA[RandomForest is always an easy-to-go algorithm but determining the best n_estimators can be very computationally intensive. In this tutorial, we will find a way to detrmine the best n_estimators without retraining.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aaabulkhair.github.io/Analixa/images/rf.png" /><media:content medium="image" url="https://aaabulkhair.github.io/Analixa/images/rf.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>