<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://aaabulkhair.github.io/Analixa/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aaabulkhair.github.io/Analixa/" rel="alternate" type="text/html" /><updated>2022-02-05T15:13:46-06:00</updated><id>https://aaabulkhair.github.io/Analixa/feed.xml</id><title type="html">Analixa</title><subtitle>Data Science School</subtitle><entry><title type="html">Choosing Best n_estimators for RandomForest model without retraining</title><link href="https://aaabulkhair.github.io/Analixa/machine%20learning/randomforest/classification/python/2022/02/05/best-n-estimators-for-randomforest.html" rel="alternate" type="text/html" title="Choosing Best n_estimators for RandomForest model without retraining" /><published>2022-02-05T00:00:00-06:00</published><updated>2022-02-05T00:00:00-06:00</updated><id>https://aaabulkhair.github.io/Analixa/machine%20learning/randomforest/classification/python/2022/02/05/best-n-estimators-for-randomforest</id><author><name>Ahmed Abulkhair</name></author><category term="Machine Learning" /><category term="RandomForest" /><category term="Classification" /><category term="Python" /><summary type="html"><![CDATA[RandomForest is always an easy-to-go algorithm but determining the best n_estimators can be very computationally intensive. In this tutorial, we will find a way to detrmine the best n_estimators without retraining.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aaabulkhair.github.io/Analixa/images/rf.png" /><media:content medium="image" url="https://aaabulkhair.github.io/Analixa/images/rf.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Titanic | The Power of Sklearn</title><link href="https://aaabulkhair.github.io/Analixa/machine%20learning/sklearn/python/2022/02/05/titanic-power-of-scikit-learn.html" rel="alternate" type="text/html" title="Titanic | The Power of Sklearn" /><published>2022-02-05T00:00:00-06:00</published><updated>2022-02-05T00:00:00-06:00</updated><id>https://aaabulkhair.github.io/Analixa/machine%20learning/sklearn/python/2022/02/05/titanic-power-of-scikit-learn</id><author><name>Ahmed Abulkhair</name></author><category term="Machine Learning" /><category term="Sklearn" /><category term="Python" /><summary type="html"><![CDATA[Generative Adversarial Networks are used to generate images that never existed before. They learn about the world (objects, animals and so forth) and create new versions of those images that never existed. In this tutorial, we will go through the basics of GANs]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://aaabulkhair.github.io/Analixa/images/titanic.png" /><media:content medium="image" url="https://aaabulkhair.github.io/Analixa/images/titanic.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>